{"version":3,"sources":["store/user.js","store/utils/reducerFunctions.js","store/conversations.js","store/activeConversation.js","store/index.js","themes/theme.js","socket.js","store/utils/thunkCreators.js","Signup.js","Login.js","components/Sidebar/ChatContent.js","components/Sidebar/CurrentUser.js","components/Sidebar/Search.js","components/Sidebar/Sidebar.js","components/Sidebar/SidebarContainer.js","components/Sidebar/Chat.js","components/Sidebar/BadgeAvatar.js","components/ActiveChat/SenderBubble.js","components/ActiveChat/OtherUserBubble.js","components/ActiveChat/ActiveChat.js","components/ActiveChat/Input.js","components/ActiveChat/Header.js","components/ActiveChat/Messages.js","components/Home.js","components/SnackbarError.js","routes.js","App.js","serviceWorker.js","index.js"],"names":["GET_USER","SET_FETCHING_STATUS","gotUser","user","type","setFetchingStatus","isFetching","reducer","state","action","addMessageToStore","payload","message","sender","newConvo","id","conversationId","otherUser","messages","latestMessageText","text","map","convo","push","addOnlineUserToStore","convoCopy","online","removeOfflineUserFromStore","addSearchedUsersToStore","users","currentUsers","forEach","newState","fakeConvo","addNewConvoToStore","recipientId","GET_CONVERSATIONS","SET_MESSAGE","ADD_ONLINE_USER","REMOVE_OFFLINE_USER","SET_SEARCHED_USERS","CLEAR_SEARCHED_USERS","ADD_CONVERSATION","setNewMessage","conversations","filter","newMessage","SET_ACTIVE_CHAT","username","CLEAR_ON_LOGOUT","appReducer","combineReducers","activeConversation","createStore","undefined","applyMiddleware","thunkMiddleware","loggerMiddleware","theme","createMuiTheme","typography","fontFamily","fontSize","button","textTransform","letterSpacing","fontWeight","overrides","MuiInput","input","palette","primary","main","secondary","socket","io","window","location","origin","on","console","log","store","dispatch","addOnlineUser","removeOfflineUser","data","axios","interceptors","request","use","a","config","localStorage","getItem","token","headers","fetchConversations","get","error","saveMessage","body","post","sendMessage","emit","connect","register","credentials","setItem","response","props","history","useHistory","useState","formErrorMessage","setFormErrorMessage","handleRegister","event","preventDefault","target","value","email","password","confirmPassword","to","Grid","container","justify","Box","item","Typography","Button","onClick","onSubmit","FormControl","TextField","label","name","required","inputProps","minLength","FormHelperText","variant","size","login","handleLogin","margin","useStyles","makeStyles","root","display","justifyContent","marginLeft","flexGrow","previewText","color","ChatContent","classes","conversation","className","height","marginTop","alignItems","subContainer","ellipsis","marginRight","opacity","BadgeAvatar","photoUrl","filledInput","background","borderRadius","marginBottom","Search","handleChange","fullWidth","hiddenLabel","FilledInput","onChange","disableUnderline","placeholder","startAdornment","InputAdornment","position","paddingLeft","paddingRight","title","searchTerm","includes","searchUsers","clearSearchedUsers","setSearchTerm","boxShadow","cursor","setActiveChat","handleClick","sidebar","profilePic","width","badge","border","backgroundColor","UserAvatar","Badge","anchorOrigin","horizontal","vertical","overlap","Avatar","alt","src","flexDirection","date","padding","bubble","SenderBubble","time","avatar","usernameDate","backgroundImage","OtherUserBubble","chatContainer","find","userId","justifySelf","postMessage","setText","handleSubmit","reqBody","content","statusText","statusDot","Header","Messages","moment","createdAt","format","senderId","logout","delete","removeItem","isLoggedIn","setIsLoggedIn","useEffect","handleLogout","component","CssBaseline","snackbar","icon","SnackbarError","Snackbar","open","snackBarOpen","onClose","setSnackBarOpen","errorMessage","Fragment","ContentProps","withRouter","fetchUser","setErrorMessage","isFetchingUser","path","Login","Signup","exact","render","Home","App","Boolean","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.29bc9b0d.chunk.js","sourcesContent":["// ACTIONS\r\n\r\nconst GET_USER = \"GET_USER\";\r\nconst SET_FETCHING_STATUS = \"SET_FETCHING_STATUS\";\r\n\r\n// ACTION CREATORS\r\n\r\nexport const gotUser = (user) => {\r\n  return {\r\n    type: GET_USER,\r\n    user\r\n  };\r\n};\r\n\r\nexport const setFetchingStatus = (isFetching) => ({\r\n  type: SET_FETCHING_STATUS,\r\n  isFetching\r\n});\r\n\r\n// REDUCER\r\n\r\nconst reducer = (state = { isFetching: true }, action) => {\r\n  switch (action.type) {\r\n    case GET_USER:\r\n      return action.user;\r\n    case SET_FETCHING_STATUS:\r\n      return {\r\n        ...state,\r\n        isFetching: action.isFetching\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default reducer;\r\n","export const addMessageToStore = (state, payload) => {\r\n  const { message, sender } = payload;\r\n  // if sender isn't null, that means the message needs to be put in a brand new convo\r\n  if (sender !== null) {\r\n    const newConvo = {\r\n      id: message.conversationId,\r\n      otherUser: sender,\r\n      messages: [message],\r\n    };\r\n    newConvo.latestMessageText = message.text;\r\n    return [newConvo, ...state];\r\n  }\r\n\r\n  return state.map((convo) => {\r\n    if (convo.id === message.conversationId) {\r\n      convo.messages.push(message);\r\n      convo.latestMessageText = message.text;\r\n      return convo;\r\n    } else {\r\n      return convo;\r\n    }\r\n  });\r\n};\r\n\r\nexport const addOnlineUserToStore = (state, id) => {\r\n  return state.map((convo) => {\r\n    if (convo.otherUser.id === id) {\r\n      const convoCopy = { ...convo };\r\n      convoCopy.otherUser.online = true;\r\n      return convoCopy;\r\n    } else {\r\n      return convo;\r\n    }\r\n  });\r\n};\r\n\r\nexport const removeOfflineUserFromStore = (state, id) => {\r\n  return state.map((convo) => {\r\n    if (convo.otherUser.id === id) {\r\n      const convoCopy = { ...convo };\r\n      convoCopy.otherUser.online = false;\r\n      return convoCopy;\r\n    } else {\r\n      return convo;\r\n    }\r\n  });\r\n};\r\n\r\nexport const addSearchedUsersToStore = (state, users) => {\r\n  const currentUsers = {};\r\n\r\n  // make table of current users so we can lookup faster\r\n  state.forEach((convo) => {\r\n    currentUsers[convo.otherUser.id] = true;\r\n  });\r\n\r\n  const newState = [...state];\r\n  users.forEach((user) => {\r\n    // only create a fake convo if we don't already have a convo with this user\r\n    if (!currentUsers[user.id]) {\r\n      let fakeConvo = { otherUser: user, messages: [] };\r\n      newState.push(fakeConvo);\r\n    }\r\n  });\r\n\r\n  return newState;\r\n};\r\n\r\nexport const addNewConvoToStore = (state, recipientId, message) => {\r\n  return state.map((convo) => {\r\n    if (convo.otherUser.id === recipientId) {\r\n      convo.id = message.conversationId;\r\n      convo.messages.push(message);\r\n      convo.latestMessageText = message.text;\r\n      return convo;\r\n    } else {\r\n      return convo;\r\n    }\r\n  });\r\n};\r\n","import {\r\n  addNewConvoToStore,\r\n  addOnlineUserToStore,\r\n  addSearchedUsersToStore,\r\n  removeOfflineUserFromStore,\r\n  addMessageToStore,\r\n} from \"./utils/reducerFunctions\";\r\n\r\n// ACTIONS\r\n\r\nconst GET_CONVERSATIONS = \"GET_CONVERSATIONS\";\r\nconst SET_MESSAGE = \"SET_MESSAGE\";\r\nconst ADD_ONLINE_USER = \"ADD_ONLINE_USER\";\r\nconst REMOVE_OFFLINE_USER = \"REMOVE_OFFLINE_USER\";\r\nconst SET_SEARCHED_USERS = \"SET_SEARCHED_USERS\";\r\nconst CLEAR_SEARCHED_USERS = \"CLEAR_SEARCHED_USERS\";\r\nconst ADD_CONVERSATION = \"ADD_CONVERSATION\";\r\n\r\n// ACTION CREATORS\r\n\r\nexport const gotConversations = (conversations) => {\r\n  return {\r\n    type: GET_CONVERSATIONS,\r\n    conversations,\r\n  };\r\n};\r\n\r\nexport const setNewMessage = (message, sender) => {\r\n  return {\r\n    type: SET_MESSAGE,\r\n    payload: { message, sender: sender || null },\r\n  };\r\n};\r\n\r\nexport const addOnlineUser = (id) => {\r\n  return {\r\n    type: ADD_ONLINE_USER,\r\n    id,\r\n  };\r\n};\r\n\r\nexport const removeOfflineUser = (id) => {\r\n  return {\r\n    type: REMOVE_OFFLINE_USER,\r\n    id,\r\n  };\r\n};\r\n\r\nexport const setSearchedUsers = (users) => {\r\n  return {\r\n    type: SET_SEARCHED_USERS,\r\n    users,\r\n  };\r\n};\r\n\r\nexport const clearSearchedUsers = () => {\r\n  return {\r\n    type: CLEAR_SEARCHED_USERS,\r\n  };\r\n};\r\n\r\n// add new conversation when sending a new message\r\nexport const addConversation = (recipientId, newMessage) => {\r\n  return {\r\n    type: ADD_CONVERSATION,\r\n    payload: { recipientId, newMessage },\r\n  };\r\n};\r\n\r\n// REDUCER\r\n\r\nconst reducer = (state = [], action) => {\r\n  switch (action.type) {\r\n    case GET_CONVERSATIONS:\r\n      return action.conversations;\r\n    case SET_MESSAGE:\r\n      return addMessageToStore(state, action.payload);\r\n    case ADD_ONLINE_USER: {\r\n      return addOnlineUserToStore(state, action.id);\r\n    }\r\n    case REMOVE_OFFLINE_USER: {\r\n      return removeOfflineUserFromStore(state, action.id);\r\n    }\r\n    case SET_SEARCHED_USERS:\r\n      return addSearchedUsersToStore(state, action.users);\r\n    case CLEAR_SEARCHED_USERS:\r\n      return state.filter((convo) => convo.id);\r\n    case ADD_CONVERSATION:\r\n      return addNewConvoToStore(\r\n        state,\r\n        action.payload.recipientId,\r\n        action.payload.newMessage\r\n      );\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default reducer;\r\n","const SET_ACTIVE_CHAT = \"SET_ACTIVE_CHAT\";\r\n\r\nexport const setActiveChat = (username) => {\r\n  return {\r\n    type: SET_ACTIVE_CHAT,\r\n    username\r\n  };\r\n};\r\n\r\nconst reducer = (state = \"\", action) => {\r\n  switch (action.type) {\r\n    case SET_ACTIVE_CHAT: {\r\n      return action.username;\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default reducer;\r\n","import { createStore, applyMiddleware, combineReducers } from \"redux\";\r\nimport loggerMiddleware from \"redux-logger\";\r\nimport thunkMiddleware from \"redux-thunk\";\r\n\r\nimport user from \"./user\";\r\nimport conversations from \"./conversations\";\r\nimport activeConversation from \"./activeConversation\";\r\n\r\nconst CLEAR_ON_LOGOUT = \"CLEAR_ON_LOGOUT\";\r\n\r\nexport const clearOnLogout = () => {\r\n  return {\r\n    type: CLEAR_ON_LOGOUT\r\n  };\r\n};\r\n\r\nconst appReducer = combineReducers({\r\n  user,\r\n  conversations,\r\n  activeConversation\r\n});\r\nconst rootReducer = (state, action) => {\r\n  if (action.type === CLEAR_ON_LOGOUT) {\r\n    // set state to initial state\r\n    state = undefined;\r\n  }\r\n  return appReducer(state, action);\r\n};\r\n\r\nexport default createStore(rootReducer, applyMiddleware(thunkMiddleware, loggerMiddleware));\r\n","import { createMuiTheme } from \"@material-ui/core\";\r\n\r\nexport const theme = createMuiTheme({\r\n  typography: {\r\n    fontFamily: \"Open Sans, sans-serif\",\r\n    fontSize: 14,\r\n    button: {\r\n      textTransform: \"none\",\r\n      letterSpacing: 0,\r\n      fontWeight: \"bold\"\r\n    }\r\n  },\r\n  overrides: {\r\n    MuiInput: {\r\n      input: {\r\n        fontWeight: \"bold\"\r\n      }\r\n    }\r\n  },\r\n  palette: {\r\n    primary: { main: \"#3A8DFF\" },\r\n    secondary: { main: \"#B0B0B0\" }\r\n  }\r\n});\r\n","import io from \"socket.io-client\";\r\nimport store from \"./store\";\r\nimport {\r\n  setNewMessage,\r\n  removeOfflineUser,\r\n  addOnlineUser,\r\n} from \"./store/conversations\";\r\n\r\nconst socket = io(window.location.origin);\r\n\r\nsocket.on(\"connect\", () => {\r\n  console.log(\"connected to server\");\r\n\r\n  socket.on(\"add-online-user\", (id) => {\r\n    store.dispatch(addOnlineUser(id));\r\n  });\r\n\r\n  socket.on(\"remove-offline-user\", (id) => {\r\n    store.dispatch(removeOfflineUser(id));\r\n  });\r\n  socket.on(\"new-message\", (data) => {\r\n    store.dispatch(setNewMessage(data.message, data.sender));\r\n  });\r\n});\r\n\r\nexport default socket;\r\n","import axios from \"axios\";\r\nimport socket from \"../../socket\";\r\nimport {\r\n  gotConversations,\r\n  addConversation,\r\n  setNewMessage,\r\n  setSearchedUsers,\r\n} from \"../conversations\";\r\nimport { gotUser, setFetchingStatus } from \"../user\";\r\n\r\naxios.interceptors.request.use(async function (config) {\r\n  const token = await localStorage.getItem(\"messenger-token\");\r\n  config.headers[\"x-access-token\"] = token;\r\n\r\n  return config;\r\n});\r\n\r\n// USER THUNK CREATORS\r\n\r\nexport const fetchUser = () => async (dispatch) => {\r\n  dispatch(setFetchingStatus(true));\r\n  try {\r\n    const { data } = await axios.get(\"/auth/user\");\r\n    dispatch(gotUser(data));\r\n    if (data.id) {\r\n      socket.emit(\"go-online\", data.id);\r\n    }\r\n  } catch (error) {\r\n    console.error(error);\r\n  } finally {\r\n    dispatch(setFetchingStatus(false));\r\n  }\r\n};\r\n\r\nexport const register = (credentials) => async (dispatch) => {\r\n  try {\r\n    const { data } = await axios.post(\"/auth/register\", credentials);\r\n    await localStorage.setItem(\"messenger-token\", data.token);\r\n    dispatch(gotUser(data));\r\n    socket.emit(\"go-online\", data.id);\r\n  } catch (error) {\r\n    console.error(error);\r\n    dispatch(gotUser({ error: error.response.data.error || \"Server Error\" }));\r\n  }\r\n};\r\n\r\nexport const login = (credentials) => async (dispatch) => {\r\n  try {\r\n    const { data } = await axios.post(\"/auth/login\", credentials);\r\n    await localStorage.setItem(\"messenger-token\", data.token);\r\n    dispatch(gotUser(data));\r\n    socket.emit(\"go-online\", data.id);\r\n  } catch (error) {\r\n    console.error(error);\r\n    dispatch(gotUser({ error: error.response.data.error || \"Server Error\" }));\r\n  }\r\n};\r\n\r\nexport const logout = (id) => async (dispatch) => {\r\n  try {\r\n    await axios.delete(\"/auth/logout\");\r\n    await localStorage.removeItem(\"messenger-token\");\r\n    dispatch(gotUser({}));\r\n    socket.emit(\"logout\", id);\r\n  } catch (error) {\r\n    console.error(error);\r\n  }\r\n};\r\n\r\n// CONVERSATIONS THUNK CREATORS\r\n\r\nexport const fetchConversations = () => async (dispatch) => {\r\n  try {\r\n    const { data } = await axios.get(\"/api/conversations\");\r\n    dispatch(gotConversations(data));\r\n  } catch (error) {\r\n    console.error(error);\r\n  }\r\n};\r\n\r\nconst saveMessage = async (body) => {\r\n  const { data } = await axios.post(\"/api/messages\", body);\r\n  return data;\r\n};\r\n\r\nconst sendMessage = (data, body) => {\r\n  socket.emit(\"new-message\", {\r\n    message: data.message,\r\n    recipientId: body.recipientId,\r\n    sender: data.sender,\r\n  });\r\n};\r\n\r\n// message format to send: {recipientId, text, conversationId}\r\n// conversationId will be set to null if its a brand new conversation\r\nexport const postMessage = (body) =>async (dispatch) => {\r\n  try {\r\n    const data = await saveMessage(body);\r\n\r\n    if (!body.conversationId) {\r\n      dispatch(addConversation(body.recipientId, data.message));\r\n      dispatch(fetchConversations())\r\n    } else {\r\n      dispatch(setNewMessage(data.message));\r\n    }\r\n\r\n    await sendMessage(data, body);\r\n    dispatch(fetchConversations())\r\n  } catch (error) {\r\n    console.error(error);\r\n  }\r\n};\r\n\r\nexport const searchUsers = (searchTerm) => async (dispatch) => {\r\n  try {\r\n    const { data } = await axios.get(`/api/users/${searchTerm}`);\r\n    dispatch(setSearchedUsers(data));\r\n  } catch (error) {\r\n    console.error(error);\r\n  }\r\n};\r\n","import React, { useState } from \"react\";\r\nimport { Redirect, useHistory } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  Grid,\r\n  Box,\r\n  Typography,\r\n  Button,\r\n  FormControl,\r\n  TextField,\r\n  FormHelperText,\r\n} from \"@material-ui/core\";\r\nimport { register } from \"./store/utils/thunkCreators\";\r\n\r\nconst Login = (props) => {\r\n  const history = useHistory();\r\n  const { user, register } = props;\r\n  const [formErrorMessage, setFormErrorMessage] = useState({});\r\n\r\n  const handleRegister = async (event) => {\r\n    event.preventDefault();\r\n    const username = event.target.username.value;\r\n    const email = event.target.email.value;\r\n    const password = event.target.password.value;\r\n    const confirmPassword = event.target.confirmPassword.value;\r\n\r\n    if (password !== confirmPassword) {\r\n      setFormErrorMessage({ confirmPassword: \"Passwords must match\" });\r\n      return;\r\n    }\r\n\r\n    await register({ username, email, password });\r\n  };\r\n\r\n  if (user.id) {\r\n    return <Redirect to=\"/home\" />;\r\n  }\r\n\r\n  return (\r\n    <Grid container justify=\"center\">\r\n      <Box>\r\n        <Grid container item>\r\n          <Typography>Need to log in?</Typography>\r\n          <Button onClick={() => history.push(\"/login\")}>Login</Button>\r\n        </Grid>\r\n        <form onSubmit={handleRegister}>\r\n          <Grid>\r\n            <Grid>\r\n              <FormControl>\r\n                <TextField\r\n                  aria-label=\"username\"\r\n                  label=\"Username\"\r\n                  name=\"username\"\r\n                  type=\"text\"\r\n                  required\r\n                />\r\n              </FormControl>\r\n            </Grid>\r\n            <Grid>\r\n              <FormControl>\r\n                <TextField\r\n                  label=\"E-mail address\"\r\n                  aria-label=\"e-mail address\"\r\n                  type=\"email\"\r\n                  name=\"email\"\r\n                  required\r\n                />\r\n              </FormControl>\r\n            </Grid>\r\n            <Grid>\r\n              <FormControl error={!!formErrorMessage.confirmPassword}>\r\n                <TextField\r\n                  aria-label=\"password\"\r\n                  label=\"Password\"\r\n                  type=\"password\"\r\n                  inputProps={{ minLength: 6 }}\r\n                  name=\"password\"\r\n                  required\r\n                />\r\n                <FormHelperText>\r\n                  {formErrorMessage.confirmPassword}\r\n                </FormHelperText>\r\n              </FormControl>\r\n            </Grid>\r\n            <Grid>\r\n              <FormControl error={!!formErrorMessage.confirmPassword}>\r\n                <TextField\r\n                  label=\"Confirm Password\"\r\n                  aria-label=\"confirm password\"\r\n                  type=\"password\"\r\n                  inputProps={{ minLength: 6 }}\r\n                  name=\"confirmPassword\"\r\n                  required\r\n                />\r\n                <FormHelperText>\r\n                  {formErrorMessage.confirmPassword}\r\n                </FormHelperText>\r\n              </FormControl>\r\n            </Grid>\r\n            <Button type=\"submit\" variant=\"contained\" size=\"large\">\r\n              Create\r\n            </Button>\r\n          </Grid>\r\n        </form>\r\n      </Box>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    user: state.user,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    register: (credentials) => {\r\n      dispatch(register(credentials));\r\n    },\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);\r\n","import React from \"react\";\r\nimport { Redirect, useHistory } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  Grid,\r\n  Box,\r\n  Typography,\r\n  Button,\r\n  FormControl,\r\n  TextField,\r\n} from \"@material-ui/core\";\r\nimport { login } from \"./store/utils/thunkCreators\";\r\n\r\nconst Login = (props) => {\r\n  const history = useHistory();\r\n  const { user, login } = props;\r\n\r\n  const handleLogin = async (event) => {\r\n    event.preventDefault();\r\n    const username = event.target.username.value;\r\n    const password = event.target.password.value;\r\n\r\n    await login({ username, password });\r\n  };\r\n\r\n  if (user.id) {\r\n    return <Redirect to=\"/home\" />;\r\n  }\r\n\r\n  return (\r\n    <Grid container justify=\"center\">\r\n      <Box>\r\n        <Grid container item>\r\n          <Typography>Need to register?</Typography>\r\n          <Button onClick={() => history.push(\"/register\")}>Register</Button>\r\n        </Grid>\r\n        <form onSubmit={handleLogin}>\r\n          <Grid>\r\n            <Grid>\r\n              <FormControl margin=\"normal\" required>\r\n                <TextField\r\n                  aria-label=\"username\"\r\n                  label=\"Username\"\r\n                  name=\"username\"\r\n                  type=\"text\"\r\n                />\r\n              </FormControl>\r\n            </Grid>\r\n            <FormControl margin=\"normal\" required>\r\n              <TextField\r\n                label=\"password\"\r\n                aria-label=\"password\"\r\n                type=\"password\"\r\n                name=\"password\"\r\n              />\r\n            </FormControl>\r\n            <Grid>\r\n              <Button type=\"submit\" variant=\"contained\" size=\"large\">\r\n                Login\r\n              </Button>\r\n            </Grid>\r\n          </Grid>\r\n        </form>\r\n      </Box>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    user: state.user,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    login: (credentials) => {\r\n      dispatch(login(credentials));\r\n    },\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);\r\n","import React from \"react\";\r\nimport { Box, Typography } from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: \"flex\",\r\n    justifyContent: \"space-between\",\r\n    marginLeft: 20,\r\n    flexGrow: 1,\r\n  },\r\n  username: {\r\n    fontWeight: \"bold\",\r\n    letterSpacing: -0.2,\r\n  },\r\n  previewText: {\r\n    fontSize: 12,\r\n    color: \"#9CADC8\",\r\n    letterSpacing: -0.17,\r\n  },\r\n}));\r\n\r\nconst ChatContent = (props) => {\r\n  const classes = useStyles();\r\n\r\n  const { conversation } = props;\r\n  const { latestMessageText, otherUser } = conversation;\r\n\r\n  return (\r\n    <Box className={classes.root}>\r\n      <Box>\r\n        <Typography className={classes.username}>\r\n          {otherUser.username}\r\n        </Typography>\r\n        <Typography className={classes.previewText}>\r\n          {latestMessageText}\r\n        </Typography>\r\n      </Box>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default ChatContent;\r\n","import React from \"react\";\r\nimport { Box, Typography } from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { connect } from \"react-redux\";\r\nimport { BadgeAvatar } from \"./index\";\r\nimport MoreHorizIcon from \"@material-ui/icons/MoreHoriz\";\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  root: {\r\n    height: 44,\r\n    marginTop: 23,\r\n    marginLeft: 6,\r\n    display: \"flex\",\r\n    alignItems: \"center\"\r\n  },\r\n  subContainer: {\r\n    display: \"flex\",\r\n    justifyContent: \"space-between\",\r\n    alignItems: \"center\",\r\n    flexGrow: 1\r\n  },\r\n  username: {\r\n    letterSpacing: -0.23,\r\n    fontSize: 16,\r\n    fontWeight: \"bold\",\r\n    marginLeft: 17\r\n  },\r\n  ellipsis: {\r\n    color: \"#95A7C4\",\r\n    marginRight: 24,\r\n    opacity: 0.5\r\n  }\r\n}));\r\n\r\nconst CurrentUser = (props) => {\r\n  const classes = useStyles();\r\n\r\n  const user = props.user || {};\r\n\r\n  return (\r\n    <Box className={classes.root}>\r\n      <BadgeAvatar photoUrl={user.photoUrl} online={true} />\r\n      <Box className={classes.subContainer}>\r\n        <Typography className={classes.username}>{user.username}</Typography>\r\n        <MoreHorizIcon classes={{ root: classes.ellipsis }} />\r\n      </Box>\r\n    </Box>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    user: state.user\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(CurrentUser);\r\n","import React from \"react\";\r\nimport { FormControl, FilledInput, InputAdornment } from \"@material-ui/core\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  filledInput: {\r\n    height: 50,\r\n    background: \"#E9EEF9\",\r\n    borderRadius: 5,\r\n    fontSize: 13,\r\n    fontWeight: \"bold\",\r\n    color: \"#99A9C4\",\r\n    letterSpacing: 0,\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    marginBottom: 20\r\n  },\r\n  input: {\r\n    \"&::placeholder\": {\r\n      color: \"#ADC0DE\",\r\n      opacity: 1\r\n    }\r\n  }\r\n}));\r\n\r\nconst Search = (props) => {\r\n  const classes = useStyles();\r\n  const { handleChange } = props;\r\n\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <FormControl fullWidth hiddenLabel>\r\n        <FilledInput\r\n          name=\"search\"\r\n          onChange={handleChange}\r\n          classes={{ root: classes.filledInput, input: classes.input }}\r\n          disableUnderline\r\n          placeholder=\"Search\"\r\n          startAdornment={\r\n            <InputAdornment position=\"start\">\r\n              <SearchIcon />\r\n            </InputAdornment>\r\n          }></FilledInput>\r\n      </FormControl>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default Search;\r\n","import React from \"react\";\r\nimport { Box, Typography } from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { connect } from \"react-redux\";\r\nimport { Search, Chat, CurrentUser } from \"./index.js\";\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  root: {\r\n    paddingLeft: 21,\r\n    paddingRight: 21,\r\n    flexGrow: 1\r\n  },\r\n  title: {\r\n    fontSize: 20,\r\n    letterSpacing: -0.29,\r\n    fontWeight: \"bold\",\r\n    marginTop: 32,\r\n    marginBottom: 15\r\n  }\r\n}));\r\n\r\nconst Sidebar = (props) => {\r\n  const classes = useStyles();\r\n  const conversations = props.conversations || [];\r\n  const { handleChange, searchTerm } = props;\r\n\r\n  return (\r\n    <Box className={classes.root}>\r\n      <CurrentUser />\r\n      <Typography className={classes.title}>Chats</Typography>\r\n      <Search handleChange={handleChange} />\r\n      {conversations\r\n        .filter((conversation) => conversation.otherUser?.username.includes(searchTerm))\r\n        .map((conversation) => {\r\n          return <Chat conversation={conversation} key={conversation.otherUser?.username} />;\r\n        })}\r\n    </Box>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    conversations: state.conversations\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(Sidebar);\r\n","import React, { useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Sidebar } from \"./index\";\r\nimport { searchUsers } from \"../../store/utils/thunkCreators\";\r\nimport { clearSearchedUsers } from \"../../store/conversations\";\r\n\r\nconst SidebarContainer = (props) => {\r\n  const { searchUsers, clearSearchedUsers } = props;\r\n\r\n  const [searchTerm, setSearchTerm] = useState(\"\");\r\n\r\n  const handleChange = async (event) => {\r\n    if (event.target.value === \"\") {\r\n      // clear searched convos from redux store\r\n      clearSearchedUsers();\r\n      setSearchTerm(\"\");\r\n      return;\r\n    }\r\n    if (searchTerm.includes(event.target.value)) {\r\n      // if new value is included in search term,\r\n      // we don't need to make another API call,\r\n      // just need to set the search term value\r\n      // so the conversations can be filtered in the rendering\r\n      setSearchTerm(event.target.value);\r\n      return;\r\n    }\r\n    await searchUsers(event.target.value);\r\n    setSearchTerm(event.target.value);\r\n  };\r\n\r\n  return <Sidebar handleChange={handleChange} searchTerm={searchTerm} />;\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    searchUsers: (username) => {\r\n      dispatch(searchUsers(username));\r\n    },\r\n    clearSearchedUsers: () => {\r\n      dispatch(clearSearchedUsers());\r\n    }\r\n  };\r\n};\r\n\r\nexport default connect(null, mapDispatchToProps)(SidebarContainer);\r\n","import React from \"react\";\r\nimport { Box } from \"@material-ui/core\";\r\nimport { BadgeAvatar, ChatContent } from \"../Sidebar\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { setActiveChat } from \"../../store/activeConversation\";\r\nimport { connect } from \"react-redux\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    borderRadius: 8,\r\n    height: 80,\r\n    boxShadow: \"0 2px 10px 0 rgba(88,133,196,0.05)\",\r\n    marginBottom: 10,\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    \"&:hover\": {\r\n      cursor: \"grab\"\r\n    }\r\n  }\r\n}));\r\n\r\nconst Chat = (props) => {\r\n  const classes = useStyles();\r\n  const { conversation } = props;\r\n  const { otherUser } = conversation;\r\n\r\n  const handleClick = async (conversation) => {\r\n    await props.setActiveChat(conversation.otherUser.username);\r\n  };\r\n\r\n  return (\r\n    <Box onClick={() => handleClick(conversation)} className={classes.root}>\r\n      <BadgeAvatar\r\n        photoUrl={otherUser.photoUrl}\r\n        username={otherUser.username}\r\n        online={otherUser.online}\r\n        sidebar={true}\r\n      />\r\n      <ChatContent conversation={conversation} />\r\n    </Box>\r\n  );\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    setActiveChat: (id) => {\r\n      dispatch(setActiveChat(id));\r\n    }\r\n  };\r\n};\r\n\r\nexport default connect(null, mapDispatchToProps)(Chat);\r\n","import React from \"react\";\r\nimport { Box, Badge, Avatar } from \"@material-ui/core\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  profilePic: {\r\n    height: 44,\r\n    width: 44\r\n  },\r\n  badge: {\r\n    height: 13,\r\n    width: 13,\r\n    borderRadius: \"50%\",\r\n    border: \"2px solid white\",\r\n    backgroundColor: \"#D0DAE9\"\r\n  },\r\n  online: {\r\n    backgroundColor: \"#1CED84\"\r\n  },\r\n  sidebar: {\r\n    marginLeft: 17\r\n  }\r\n}));\r\n\r\nconst UserAvatar = (props) => {\r\n  const classes = useStyles();\r\n  const { sidebar, username, photoUrl, online } = props;\r\n\r\n  return (\r\n    <Box className={sidebar ? classes.sidebar : \"\"}>\r\n      <Badge\r\n        classes={{ badge: `${classes.badge} ${online && classes.online}` }}\r\n        variant=\"dot\"\r\n        anchorOrigin={{ horizontal: \"right\", vertical: \"bottom\" }}\r\n        overlap=\"circle\">\r\n        <Avatar alt={username} src={photoUrl} className={classes.profilePic}></Avatar>\r\n      </Badge>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default UserAvatar;\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Box, Typography } from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  root: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"flex-end\"\r\n  },\r\n  date: {\r\n    fontSize: 11,\r\n    color: \"#BECCE2\",\r\n    fontWeight: \"bold\",\r\n    marginBottom: 5\r\n  },\r\n  text: {\r\n    fontSize: 14,\r\n    color: \"#91A3C0\",\r\n    letterSpacing: -0.2,\r\n    padding: 8,\r\n    fontWeight: \"bold\"\r\n  },\r\n  bubble: {\r\n    background: \"#F4F6FA\",\r\n    borderRadius: \"10px 10px 0 10px\"\r\n  }\r\n}));\r\n\r\nconst SenderBubble = (props) => {\r\n  const classes = useStyles();\r\n  const { time, text } = props;\r\n  return (\r\n    <Box className={classes.root}>\r\n      <Typography className={classes.date}>{time}</Typography>\r\n      <Box className={classes.bubble}>\r\n        <Typography className={classes.text}>{text}</Typography>\r\n      </Box>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default SenderBubble;\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Box, Typography, Avatar } from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  root: {\r\n    display: \"flex\"\r\n  },\r\n  avatar: {\r\n    height: 30,\r\n    width: 30,\r\n    marginRight: 11,\r\n    marginTop: 6\r\n  },\r\n  usernameDate: {\r\n    fontSize: 11,\r\n    color: \"#BECCE2\",\r\n    fontWeight: \"bold\",\r\n    marginBottom: 5\r\n  },\r\n  bubble: {\r\n    backgroundImage: \"linear-gradient(225deg, #6CC1FF 0%, #3A8DFF 100%)\",\r\n    borderRadius: \"0 10px 10px 10px\"\r\n  },\r\n  text: {\r\n    fontSize: 14,\r\n    fontWeight: \"bold\",\r\n    color: \"#FFFFFF\",\r\n    letterSpacing: -0.2,\r\n    padding: 8\r\n  }\r\n}));\r\n\r\nconst OtherUserBubble = (props) => {\r\n  const classes = useStyles();\r\n  const { text, time, otherUser } = props;\r\n  return (\r\n    <Box className={classes.root}>\r\n      <Avatar alt={otherUser.username} src={otherUser.photoUrl} className={classes.avatar}></Avatar>\r\n      <Box>\r\n        <Typography className={classes.usernameDate}>\r\n          {otherUser.username} {time}\r\n        </Typography>\r\n        <Box className={classes.bubble}>\r\n          <Typography className={classes.text}>{text}</Typography>\r\n        </Box>\r\n      </Box>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default OtherUserBubble;\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Box } from \"@material-ui/core\";\r\nimport { Input, Header, Messages } from \"./index\";\r\nimport { connect } from \"react-redux\";\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  root: {\r\n    display: \"flex\",\r\n    flexGrow: 8,\r\n    flexDirection: \"column\"\r\n  },\r\n  chatContainer: {\r\n    marginLeft: 41,\r\n    marginRight: 41,\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    flexGrow: 1,\r\n    justifyContent: \"space-between\"\r\n  }\r\n}));\r\n\r\nconst ActiveChat = (props) => {\r\n  const classes = useStyles();\r\n  const { user } = props;\r\n  const conversation = props.conversation || {};\r\n\r\n  return (\r\n    <Box className={classes.root}>\r\n      {conversation.otherUser && (\r\n        <>\r\n          <Header\r\n            username={conversation.otherUser.username}\r\n            online={conversation.otherUser.online || false}\r\n          />\r\n          <Box className={classes.chatContainer}>\r\n            <Messages\r\n              messages={conversation.messages}\r\n              otherUser={conversation.otherUser}\r\n              userId={user.id}\r\n            />\r\n            <Input\r\n              otherUser={conversation.otherUser}\r\n              conversationId={conversation.id}\r\n              user={user}\r\n            />\r\n          </Box>\r\n        </>\r\n      )}\r\n    </Box>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    user: state.user,\r\n    conversation:\r\n      state.conversations &&\r\n      state.conversations.find(\r\n        (conversation) => conversation.otherUser.username === state.activeConversation\r\n      )\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, null)(ActiveChat);\r\n","import React, { useState } from \"react\";\r\nimport { FormControl, FilledInput } from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { connect } from \"react-redux\";\r\nimport { postMessage } from \"../../store/utils/thunkCreators\";\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  root: {\r\n    justifySelf: \"flex-end\",\r\n    marginTop: 15\r\n  },\r\n  input: {\r\n    height: 70,\r\n    backgroundColor: \"#F4F6FA\",\r\n    borderRadius: 8,\r\n    marginBottom: 20\r\n  }\r\n}));\r\n\r\nconst Input = (props) => {\r\n  const classes = useStyles();\r\n  const [text, setText] = useState(\"\");\r\n  const { postMessage, otherUser, conversationId, user } = props;\r\n\r\n  const handleChange = (event) => {\r\n    setText(event.target.value);\r\n  };\r\n\r\n  const handleSubmit = async (event) => {\r\n    event.preventDefault();\r\n    // add sender user info if posting to a brand new convo, so that the other user will have access to username, profile pic, etc.\r\n    const reqBody = {\r\n      text: event.target.text.value,\r\n      recipientId: otherUser.id,\r\n      conversationId,\r\n      sender: conversationId ? null : user\r\n    };\r\n    await postMessage(reqBody);\r\n    setText(\"\");\r\n  };\r\n\r\n  return (\r\n    <form className={classes.root} onSubmit={handleSubmit}>\r\n      <FormControl fullWidth hiddenLabel>\r\n        <FilledInput\r\n          classes={{ root: classes.input }}\r\n          disableUnderline\r\n          placeholder=\"Type something...\"\r\n          value={text}\r\n          name=\"text\"\r\n          onChange={handleChange}\r\n        />\r\n      </FormControl>\r\n    </form>\r\n  );\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    postMessage: (message) => {\r\n      dispatch(postMessage(message));\r\n    },\r\n  };\r\n};\r\n\r\nexport default connect(null, mapDispatchToProps)(Input);\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Box, Typography } from \"@material-ui/core\";\r\nimport MoreHorizIcon from \"@material-ui/icons/MoreHoriz\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"space-between\",\r\n    height: 89,\r\n    marginBottom: 34,\r\n    boxShadow: \"0 2px 20px 0 rgba(88,133,196,0.10)\"\r\n  },\r\n  content: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    marginLeft: 24\r\n  },\r\n  username: {\r\n    fontSize: 20,\r\n    letterSpacing: -0.29,\r\n    fontWeight: \"bold\",\r\n    marginRight: 14\r\n  },\r\n  statusText: {\r\n    fontSize: 12,\r\n    color: \"#BFC9DB\",\r\n    letterSpacing: -0.17\r\n  },\r\n  statusDot: {\r\n    height: 8,\r\n    width: 8,\r\n    borderRadius: \"50%\",\r\n    marginRight: 5,\r\n    backgroundColor: \"#D0DAE9\"\r\n  },\r\n  online: {\r\n    background: \"#1CED84\"\r\n  },\r\n  ellipsis: {\r\n    color: \"#95A7C4\",\r\n    marginRight: 24,\r\n    opacity: 0.5\r\n  }\r\n}));\r\n\r\nconst Header = (props) => {\r\n  const classes = useStyles();\r\n  const { username, online } = props;\r\n\r\n  return (\r\n    <Box className={classes.root}>\r\n      <Box className={classes.content}>\r\n        <Typography className={classes.username}>{username}</Typography>\r\n        <Box className={`${classes.statusDot} ${classes[online && \"online\"]}`}></Box>\r\n        <Typography className={classes.statusText}>{online ? \"Online\" : \"Offline\"}</Typography>\r\n      </Box>\r\n      <MoreHorizIcon classes={{ root: classes.ellipsis }} />\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\nimport { Box } from \"@material-ui/core\";\r\nimport { SenderBubble, OtherUserBubble } from \"../ActiveChat\";\r\nimport moment from \"moment\";\r\n\r\nconst Messages = (props) => {\r\n  const { messages, otherUser, userId } = props;\r\n\r\n  return (\r\n    <Box>\r\n      {messages.map((message) => {\r\n        const time = moment(message.createdAt).format(\"h:mm\");\r\n\r\n        return message.senderId === userId ? (\r\n          <SenderBubble key={message.id} text={message.text} time={time} />\r\n        ) : (\r\n          <OtherUserBubble key={message.id} text={message.text} time={time} otherUser={otherUser} />\r\n        );\r\n      })}\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default Messages;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport { Grid, CssBaseline, Button } from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { SidebarContainer } from \"./Sidebar\";\r\nimport { ActiveChat } from \"./ActiveChat\";\r\nimport { logout, fetchConversations } from \"../store/utils/thunkCreators\";\r\nimport { clearOnLogout } from \"../store/index\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    height: \"100vh\"\r\n  }\r\n}));\r\n\r\nconst Home = (props) => {\r\n  const classes = useStyles();\r\n  const { user, logout, fetchConversations } = props;\r\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (user.id) {\r\n      setIsLoggedIn(true);\r\n    }\r\n  }, [user.id]);\r\n\r\n  useEffect(() => {\r\n    fetchConversations();\r\n  }, [fetchConversations]);\r\n\r\n  if (!user.id) {\r\n    // If we were previously logged in, redirect to login instead of register\r\n    if (isLoggedIn) return <Redirect to=\"/login\" />;\r\n    return <Redirect to=\"/register\" />;\r\n  }\r\n\r\n  const handleLogout = async () => {\r\n    await logout(user.id);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {/* logout button will eventually be in a dropdown next to username */}\r\n      <Button className={classes.logout} onClick={handleLogout}>\r\n        Logout\r\n      </Button>\r\n      <Grid container component=\"main\" className={classes.root}>\r\n        <CssBaseline />\r\n        <SidebarContainer />\r\n        <ActiveChat />\r\n      </Grid>\r\n    </>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    user: state.user,\r\n    conversations: state.conversations\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    logout: (id) => {\r\n      dispatch(logout(id));\r\n      dispatch(clearOnLogout());\r\n    },\r\n    fetchConversations: () => {\r\n      dispatch(fetchConversations());\r\n    }\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Home);\r\n","import React from \"react\";\r\nimport { Button, Snackbar } from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Close from \"@material-ui/icons/Close\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  snackbar: {\r\n    backgroundColor: \"red\",\r\n    fontWeight: \"bold\"\r\n  },\r\n  icon: {\r\n    color: \"white\"\r\n  }\r\n}));\r\n\r\nconst SnackbarError = (props) => {\r\n  const classes = useStyles();\r\n  return (\r\n    <Snackbar\r\n      open={props.snackBarOpen}\r\n      onClose={() => props.setSnackBarOpen(false)}\r\n      message={props.errorMessage || \"Sorry, an error occured. Please try again\"}\r\n      action={\r\n        <React.Fragment>\r\n          <Button\r\n            className={classes.icon}\r\n            size=\"small\"\r\n            onClick={() => props.setSnackBarOpen(false)}>\r\n            <Close color=\"secondary\" />\r\n          </Button>\r\n        </React.Fragment>\r\n      }\r\n      ContentProps={{\r\n        classes: {\r\n          root: classes.snackbar\r\n        }\r\n      }}\r\n    />\r\n  );\r\n};\r\n\r\nexport default SnackbarError;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Route, Switch, withRouter } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport { fetchUser } from \"./store/utils/thunkCreators\";\r\nimport Signup from \"./Signup.js\";\r\nimport Login from \"./Login.js\";\r\nimport { Home, SnackbarError } from \"./components\";\r\n\r\nconst Routes = (props) => {\r\n  const { user, fetchUser } = props;\r\n  const [errorMessage, setErrorMessage] = useState(\"\");\r\n  const [snackBarOpen, setSnackBarOpen] = useState(false);\r\n\r\n  useEffect(() => {\r\n    fetchUser();\r\n  }, [fetchUser]);\r\n\r\n  useEffect(() => {\r\n    if (user.error) {\r\n      // check to make sure error is what we expect, in case we get an unexpected server error object\r\n      if (typeof user.error === \"string\") {\r\n        setErrorMessage(user.error);\r\n      } else {\r\n        setErrorMessage(\"Internal Server Error. Please try again\");\r\n      }\r\n      setSnackBarOpen(true);\r\n    }\r\n  }, [user.error]);\r\n\r\n  if (props.user.isFetchingUser) {\r\n    return <div>Loading...</div>;\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {snackBarOpen && (\r\n        <SnackbarError\r\n          setSnackBarOpen={setSnackBarOpen}\r\n          errorMessage={errorMessage}\r\n          snackBarOpen={snackBarOpen}\r\n        />\r\n      )}\r\n      <Switch>\r\n        <Route path=\"/login\" component={Login} />\r\n        <Route path=\"/register\" component={Signup} />\r\n        <Route\r\n          exact\r\n          path=\"/\"\r\n          render={(props) => (props.user?.id ? <Home /> : <Signup />)}\r\n        />\r\n        <Route path=\"/home\" component={Home} />\r\n      </Switch>\r\n    </>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    user: state.user,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    fetchUser() {\r\n      dispatch(fetchUser());\r\n    },\r\n  };\r\n};\r\n\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Routes));\r\n","import React from \"react\";\r\nimport { MuiThemeProvider } from \"@material-ui/core\";\r\nimport { BrowserRouter } from \"react-router-dom\";\r\nimport { Provider } from \"react-redux\";\r\nimport store from \"./store\";\r\n\r\nimport { theme } from \"./themes/theme\";\r\nimport Routes from \"./routes\";\r\n\r\nfunction App() {\r\n  return (\r\n    <Provider store={store}>\r\n      <MuiThemeProvider theme={theme}>\r\n        <BrowserRouter>\r\n          <Routes />\r\n        </BrowserRouter>\r\n      </MuiThemeProvider>\r\n    </Provider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}